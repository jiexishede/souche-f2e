/**
 * Middleware
 *
 * MIT License copyright (c) 2012 Nick Crohn
 *
 */

var winston = require('winston');

module.exports = function(options) {

    var uglify = require("uglify-js"),
        fsys = require("../lib/filesystem.js"),
        url = require("url"),
        src, logLevel = options.logLevel,
        logger = options.logger,
        maxAge = options.maxAge || 86400000; // default to 1 day

    if (!logger) {
        winston.loggers.add('express-uglify', {
            console: {
                level: logLevel || 'info',
                colorize: true
            }
        });

        logger = winston.loggers.get('express-uglify');
        logger.setLevels(winston.config.syslog.levels);
    }

    if (options.hasOwnProperty("src")) {
        src = options.src;
    } else {
        throw new Error("ExpressUglify middleware requires a 'src' directory");
    }

    return function(req, res, next) {
        var path = url.parse(req.url).pathname;
        if (path.match(/\.js$/) && !path.match(/min/)) {
            fsys.getFile(src + path,
                function(data, isCached) {

                    if (data === null) {
                        logger.log('info', '"GET ' + path + '" 404');
                        res.end("file not found", 404);
                    } else {
                        var ast;
                        try {
                            ast = uglify.minify(src + path, {
                                "reserved-names": 'require,define'
                            }).code
                        } catch (x) {
                            logger.log('error', path + ' ' + x);
                        }
                        logger.log('info', '"GET ' + path + '" 200 - Minified');
                        res.setHeader('Content-Type', 'text/javascript');
                        res.send(200, ast);
                    }

                });
        } else {
            next();
        }

    };

};
